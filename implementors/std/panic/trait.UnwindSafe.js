(function() {var implementors = {};
implementors["block"] = [{"text":"impl&lt;A, R&gt; UnwindSafe for Block&lt;A, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, R&gt; UnwindSafe for RcBlock&lt;A, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, R, F&gt; UnwindSafe for ConcreteBlock&lt;A, R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cocoa"] = [{"text":"impl UnwindSafe for NSApplicationPresentationOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSWindowStyleMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSWindowOrderingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSAlignmentOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSWindowCollectionBehavior","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSWindowOcclusionState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventSwipeTrackingOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventPhase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSTouchPhase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventModifierFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSApplicationActivationPolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSApplicationActivationOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSApplicationTerminateReply","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSWindowTitleVisibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSBackingStoreType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSOpenGLPixelFormatAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSOpenGLPFAOpenGLProfiles","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSOpenGLContextParameter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSWindowButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSBezelStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSRequestUserAttentionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSPasteboardReadingOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSPasteboardWritingOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventGestureAxis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSPointingDeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventButtonMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEventSubtype","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSCompositingOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSImageCacheMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSTIFFCompression","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSImageLoadStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSTabViewType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSTabState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSEnumerationOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSFastIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSDataReadingOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSDataBase64EncodingOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSDataBase64DecodingOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSDataWritingOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSDataSearchOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSRectEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSComparisonResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CALayer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EdgeAntialiasingMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CornerMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AutoresizingMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CARenderer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CATransform3D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CVTimeStamp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CVSMPTETime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentsGravity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentsFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]}];
implementors["core_foundation"] = [{"text":"impl&lt;T&gt; UnwindSafe for CFArray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for CFArrayIterator&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFAttributedString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFMutableAttributedString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFAllocator","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for ItemRef&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for ItemMutRef&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFBoolean","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFDate","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for CFDictionary&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for CFMutableDictionary&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFFileDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFNumber","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for CFSet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFURL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFBundle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFPropertyList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoopTimer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoopSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoopObserver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFTimeZone","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFUUID","synthetic":true,"types":[]}];
implementors["core_foundation_sys"] = [{"text":"impl UnwindSafe for CFArrayCallBacks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFAttributedString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFAllocatorContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFComparisonResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFBundle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFDate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFDictionaryKeyCallBacks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFDictionaryValueCallBacks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFDictionary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFFileDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFFileDescriptorContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFMessagePortContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFMessagePort","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFBoolean","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFNumber","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFRunLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFRunLoopSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFRunLoopObserver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoopSourceContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoopSourceContext1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoopObserverContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFRunLoopTimerContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFRunLoopTimer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFSetCallBacks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFTimeZone","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFURL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __CFUUID","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CFUUIDBytes","synthetic":true,"types":[]}];
implementors["core_graphics"] = [{"text":"impl UnwindSafe for CGColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGColorSpace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGColorSpaceRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGContextRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGBlendMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGTextDrawingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGDataProvider","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGDataProviderRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGDisplayMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGDisplayModeRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGConfigureOption","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEventFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollEventUnit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEventRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEventType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGMouseButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEventTapLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEventSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEventSourceRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGEventSourceStateID","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGFontRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGAffineTransform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGSRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGSSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGImageRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGImageAlphaInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGImageByteOrderInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGPathRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CGPathElementRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGPathElement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CGPathElementType","synthetic":true,"types":[]}];
implementors["darwin_webkit"] = [{"text":"impl UnwindSafe for NSURLBookmarkCreationOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NSURLBookmarkResolutionOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DarwinWKApp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DarwinWKWebView","synthetic":true,"types":[]}];
implementors["dispatch"] = [{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupGuard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SuspendGuard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreGuard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitTimeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueuePriority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for dispatch_object_s","synthetic":true,"types":[]}];
implementors["malloc_buf"] = [{"text":"impl&lt;T&gt; UnwindSafe for MallocBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["objc"] = [{"text":"impl UnwindSafe for Encoding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ivar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Method","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Object","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassDecl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtocolDecl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StrongPtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WeakPtr","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()