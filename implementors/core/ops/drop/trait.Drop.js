(function() {var implementors = {};
implementors["block"] = [{"text":"impl&lt;A, R&gt; Drop for RcBlock&lt;A, R&gt;","synthetic":false,"types":[]}];
implementors["cocoa"] = [{"text":"impl Drop for CALayer","synthetic":false,"types":[]},{"text":"impl Drop for CARenderer","synthetic":false,"types":[]}];
implementors["core_foundation"] = [{"text":"impl&lt;T&gt; Drop for CFArray&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Drop for CFAttributedString","synthetic":false,"types":[]},{"text":"impl Drop for CFMutableAttributedString","synthetic":false,"types":[]},{"text":"impl Drop for CFType","synthetic":false,"types":[]},{"text":"impl Drop for CFAllocator","synthetic":false,"types":[]},{"text":"impl Drop for CFBoolean","synthetic":false,"types":[]},{"text":"impl Drop for CFData","synthetic":false,"types":[]},{"text":"impl Drop for CFDate","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Drop for CFDictionary&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Drop for CFMutableDictionary&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl Drop for CFError","synthetic":false,"types":[]},{"text":"impl Drop for CFFileDescriptor","synthetic":false,"types":[]},{"text":"impl Drop for CFNumber","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Drop for CFSet&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Drop for CFString","synthetic":false,"types":[]},{"text":"impl Drop for CFURL","synthetic":false,"types":[]},{"text":"impl Drop for CFBundle","synthetic":false,"types":[]},{"text":"impl Drop for CFPropertyList","synthetic":false,"types":[]},{"text":"impl Drop for CFRunLoop","synthetic":false,"types":[]},{"text":"impl Drop for CFRunLoopTimer","synthetic":false,"types":[]},{"text":"impl Drop for CFRunLoopSource","synthetic":false,"types":[]},{"text":"impl Drop for CFRunLoopObserver","synthetic":false,"types":[]},{"text":"impl Drop for CFTimeZone","synthetic":false,"types":[]},{"text":"impl Drop for CFUUID","synthetic":false,"types":[]}];
implementors["core_graphics"] = [{"text":"impl Drop for CGColor","synthetic":false,"types":[]},{"text":"impl Drop for CGColorSpace","synthetic":false,"types":[]},{"text":"impl Drop for CGContext","synthetic":false,"types":[]},{"text":"impl Drop for CGDataProvider","synthetic":false,"types":[]},{"text":"impl Drop for CGDisplayMode","synthetic":false,"types":[]},{"text":"impl Drop for CGEvent","synthetic":false,"types":[]},{"text":"impl Drop for CGEventSource","synthetic":false,"types":[]},{"text":"impl Drop for CGFont","synthetic":false,"types":[]},{"text":"impl Drop for CGSRegion","synthetic":false,"types":[]},{"text":"impl Drop for CGImage","synthetic":false,"types":[]},{"text":"impl Drop for CGPath","synthetic":false,"types":[]}];
implementors["dispatch"] = [{"text":"impl Drop for Group","synthetic":false,"types":[]},{"text":"impl Drop for GroupGuard","synthetic":false,"types":[]},{"text":"impl Drop for Queue","synthetic":false,"types":[]},{"text":"impl Drop for SuspendGuard","synthetic":false,"types":[]},{"text":"impl Drop for Semaphore","synthetic":false,"types":[]},{"text":"impl Drop for SemaphoreGuard","synthetic":false,"types":[]}];
implementors["objc"] = [{"text":"impl Drop for ClassDecl","synthetic":false,"types":[]},{"text":"impl Drop for StrongPtr","synthetic":false,"types":[]},{"text":"impl Drop for WeakPtr","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()